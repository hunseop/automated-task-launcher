PRD (Product Requirements Document)

프로젝트 개요

	•	프로젝트명: ATL (Automated Task Launcher)
	•	목적: 다양한 파이썬 자동화 스크립트를 Project 단위로 모듈식 관리할 수 있는 애플리케이션입니다. 각 Project는 미리 정의된 고정 Task 리스트로 구성되어 있으며, 사용자는 “New Project”를 통해 원하는 Project를 선택하여 해당 Task 리스트를 불러오고 순차적으로 작업을 진행할 수 있습니다. Project들은 보드 리스트에 추가되어, 여러 Project를 동시에 관리하고 진행 상태를 확인할 수 있습니다.

	•	Project: 사용자에게 제공되는 자동화 작업 단위, 하나의 “Project”는 특정한 목표를 위한 일련의 Task(워크플로우)를 포함
	•	Workflow 또는 Automation Process: 고정된 Task List를 의미하며, 각 Project는 하나의 Workflow로 정의된 Task들을 순차적으로 실행
	•	Task: Workflow 내에서 고정된 순서로 수행되는 개별 작업

유저 플로우

	1.	New Project 생성 및 선택
	•	사용자가 애플리케이션에 접속하여, “New Project” 버튼을 눌러 사전에 정의된 Project 리스트 중 하나를 선택하고 생성합니다.
	•	생성된 Project는 보드 리스트에 추가되며, Project명, 생성 날짜, 진행 상태 등이 표시됩니다.
	•	보드 리스트에서는 여러 Project가 동시에 관리될 수 있어, 사용자가 여러 작업을 병렬로 수행할 수 있습니다.
	2.	고정된 Task 리스트 순차 진행
	예시)
	•	각 Project는 고정된 Task 리스트로 구성되어 있으며, 순차적으로 진행됩니다.
	•	Task 1: 방화벽 접근
	•	사용자는 방화벽에 접근하기 위해 인증 정보를 입력해야 합니다.
	•	Task 2: 데이터 가져오기 및 정책 추출
	•	인증이 완료되면 방화벽에서 데이터를 가져와 정책을 DB에 저장합니다.
	•	Task 3: 사용자 정책명 입력
	•	사용자가 조회하고 싶은 특정 정책명을 입력합니다.
	•	Task 4: 결과 가공 및 출력
	•	입력된 정책명을 기준으로 매칭되는 정책을 가공하여 UI에 결과를 출력합니다.
	•	모든 Task는 순서대로 진행되며, 다음 Task로 자동으로 이동합니다.
	3.	Project 결과 확인 및 데이터 검색
	•	모든 Task가 완료되면, Project의 결과가 UI에 지정된 포맷(테이블, 차트 등)으로 표시됩니다.
	•	사용자는 테이블에 필터를 적용하여 원하는 데이터를 검색할 수 있으며, 결과를 엑셀 파일 등으로 다운로드할 수 있습니다.
	4.	Project 관리 및 진행 상태 확인
	•	보드 리스트에서 여러 Project의 진행 상황을 한눈에 확인할 수 있습니다.
	•	사용자는 완료된 Project의 상태를 확인하고 필요 시 삭제할 수 있습니다.
	•	Project 보드는 접었다가 펼칠 수 있어, 각 Project의 상세 정보와 진행 과정을 간편하게 볼 수 있습니다.

핵심 기능

	1.	Project 보드 리스트 관리
	•	동시 다중 Project 관리: 보드 리스트에 여러 Project를 추가하여 동시에 진행할 수 있습니다.
	•	Project 진행 상태 표시: 각 Project의 진행 상황을 대기 중, 진행 중, 완료로 구분하여 표시합니다.
	•	Project 삭제 기능: 완료된 Project를 삭제할 수 있습니다.
	2.	고정된 Task 리스트 기반 자동화 프로세스 관리
	•	고정 Task 리스트의 순차적 진행: Project는 미리 정의된 고정 Task 리스트로 구성되며, 모든 Task는 고정된 순서에 따라 실행됩니다.
	•	Task 입력 및 결과 표시: 각 Task는 필요한 입력값을 받고, 결과를 UI에 표시합니다. 인증 정보 입력 등의 사용자 입력이 필요한 Task는 개별 Task로 분리되어 있습니다.
	•	Task 상태 표시: 각 Task의 진행 상태를 실시간으로 업데이트하여 표시합니다.
	3.	다양한 결과 출력 포맷 및 데이터 필터링
	•	결과 포맷에 따른 다양한 컴포넌트 제공: Project 완료 시 결과는 테이블, 차트 등 다양한 형태의 컴포넌트로 UI에 표시됩니다.
	•	데이터 필터링 및 검색 기능: 사용자는 테이블에 필터를 적용하여 데이터를 검색할 수 있습니다.
	•	파일 내보내기 기능: 검색 및 필터링된 데이터를 엑셀 파일 등으로 내보낼 수 있습니다.
	4.	데이터 관리 및 자동 저장
	•	자동 데이터 저장: 작업 진행 상황과 데이터가 자동으로 저장되어 데이터 손실을 방지합니다.
	•	백업 및 복원 기능: Project와 Task 데이터를 백업하고 복원할 수 있는 기능을 제공합니다.
	5.	직관적인 사용자 인터페이스
	•	일관된 디자인 유지: 전체 UI에서 일관된 디자인을 적용하여 사용자 경험을 향상합니다.
	•	쉬운 Project 생성 및 Task 진행: 복잡한 메뉴 없이도 간편하게 Project를 생성하고 Task를 진행할 수 있습니다.
	6.	알림 및 로그 관리
	•	실시간 알림 기능: Task 완료 및 오류 발생 시 실시간으로 알림을 제공합니다.
	•	이벤트 로그: 모든 작업의 이력과 상세 정보를 확인할 수 있는 로그 기능을 제공합니다.
	•	오류 처리 및 재시도 기능: 오류 발생 시 해당 Task를 재시도할 수 있는 기능을 제공합니다.

기술 스택

	1.	프론트엔드
	•	Electron: 웹 애플리케이션을 데스크탑 애플리케이션으로 변환합니다.
	•	React: 동적인 UI와 상태 관리를 위한 JavaScript 라이브러리입니다.
	•	Tailwind CSS: 간결하고 일관된 UI 스타일링을 위한 CSS 프레임워크입니다.
	•	TanStack Table
	•	shadCN/UI
	2.	백엔드
	•	FastAPI: Task 처리 및 데이터 관리용 API 서버입니다.
	•	Python: 백엔드 로직 구현 및 데이터 처리를 위한 프로그래밍 언어입니다.
	•	SQLite: Task 및 Project 데이터 관리를 위한 경량 데이터베이스입니다.
	3.	데이터 처리 및 파일 관리
	•	Pandas: Task 결과를 테이블 데이터로 처리하고, 엑셀 파일로 변환하여 다운로드를 지원합니다.
